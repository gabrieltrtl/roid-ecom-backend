const Company = require('../models/Company');

const identifyCompany = async (req, res, next) => {
  try {
    const host = req.headers.host; // Exemplo: empresa1.bulkcrm.com ou bulkcrm.com

    if (!host) {
      console.log(`‚ùå Host n√£o encontrado na requisi√ß√£o.`);
      return res.status(400).json({ message: "Host n√£o encontrado na requisi√ß√£o." });
    }

    // Ignora verifica√ß√£o de subdom√≠nio em ambiente de dev local (opcional)
    if (process.env.NODE_ENV === 'development' && host.startsWith('localhost')) {
      console.log('‚öôÔ∏è Ambiente de desenvolvimento - ignorando subdom√≠nio.');
      return next();
    }

    const hostParts = host.split('.');

    // üí° NOVO: Caso o host seja o dom√≠nio principal (bulkcrm.com)
    if (hostParts.length === 2 && hostParts[1] === 'com' && hostParts[0] === 'bulkcrm') {
      console.log(`üîç Dominio principal identificado: ${host}`);
      // Trate como o dom√≠nio principal
      return next(); // ‚úÖ Permite seguir sem validar o subdom√≠nio
    }

    // ‚ö†Ô∏è SE N√ÉO HOUVER SUBDOM√çNIO V√ÅLIDO: Se o host n√£o tiver um subdom√≠nio v√°lido
    if (hostParts.length < 2) {
      console.log(`‚ùå Subdom√≠nio inv√°lido: ${host}`);
      return res.status(400).json({ message: "Subdom√≠nio inv√°lido." });
    }

    const subdomain = hostParts[0]; // Ex: empresa1
    console.log(`üîç Subdom√≠nio identificado: ${subdomain}`);

    // üí° NOVO: Verifique a empresa com o subdom√≠nio
    const company = await Company.findOne({ domain: subdomain });

    if (!company) {
      console.log(`üö´ Subdom√≠nio ${subdomain} n√£o autorizado.`);
      return res.status(403).json({ message: "Subdom√≠nio n√£o autorizado." });
    }

    req.company = company; // üî• Empresa dispon√≠vel nos controllers
    console.log("üè¢ Empresa identificada no middleware:", req.company);
    next();
  } catch (error) {
    console.error("‚ùå Erro ao identificar empresa:", error);
    res.status(500).json({ message: "Erro ao identificar empresa", error });
  }
};

module.exports = identifyCompany;
